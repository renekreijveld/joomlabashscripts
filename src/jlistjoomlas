#!/bin/bash

# jlistjoomlas -- Find Joomla instances on your Linux server.
# Supports Joomla versions 1.0 - 4.x
#
# Copyright 2014 - 2022 Rene Kreijveld - email@renekreijveld.nl
# This program is free software; you may redistribute it and/or modify it.
#
# Warning! This script needs the file jfunctions. This has to be installed in the same directory as this script.
#
# Version history
# 1.0 Initial version
# 1.1 Code rewrite
# 1.2 Added CSV option
# 1.3 Modification of all echo -e statements
# 1.4 Added release version option
# 1.5 Added test if jfunctions exists
# 1.6 Start folder set to /home, this is default for a Runcloud server

# define variables
version=1.6
mypath=$(cd $(dirname ${0}); pwd -P)
myname=$(basename ${0})
startdir=/home

# display usage information
usage() {
	echo ""
	echo "${myname} version ${version}, written by Rene Kreijveld."
	echo ""
	echo "Usage: ${myname} [-s] [-c] [-h] [-r release]"
	echo ""
	echo "-s Short. Only display path and Joomla version."
	echo "-r Release version. Only display information about Joomla sites with given release version, eg 1.5, 2.5, 3.4"
	echo "-c CSV. Output values in CSV format."
	echo "-h Help. Display this info."
	echo ""
	echo "Example usage:"
	echo ""
	echo "${myname}"
	echo "Outputs detailed information about Joomla websites found on this server."
	echo ""
	echo "${myname} -s -r 3.3"
	echo "Outputs short information about Joomla 3.3 websites found on this server."
	echo ""
	echo "${myname} -c > joomlasites.csv"
	echo "Outputs detailed information about Joomla websites in CSV format and writes result to the file joomlasites.csv."
	echo ""
	exit 0
}

# process the arguments
short="no"
csv="no"
releaseversion=
while getopts schr: opt
do
	case "${opt}" in
		s) short="yes";;
		r) releaseversion=$OPTARG;;
		c) csv="yes";;
		h) usage;;
		\?) usage;;
	esac
done

if [ "${csv}" == "no" ]
then
	if [ "${short}" == "no" ]
	then
		echo ""
		echo "${myname} version ${version}, written by Rene Kreijveld."
		echo ""
	fi
fi

if [ "${csv}" == "yes" ]
then
	echo "\"map\",\"name\",\"version\",\"database\",\"dbuser\",\"password\",\"host\",\"prefix\""
fi

for dir in $(find ${startdir} -maxdepth 4 -type d)
do
	if [ -f ${dir}/configuration.php ]
	then
		# possible joomla found
		cd ${dir}
		if [ "${csv}" == "no" ]
		then
			if [ "${short}" == "no" ]
			then
				echo Possible Joomla found in ${dir}
			fi
		fi

		# get Joomla information
		if [ ! -e ${mypath}/jfunctions ]
		then
			echo ""
			echo "Cannot continue: script jfunctions not found."
			echo ""
			exit 1
		else
			. ${mypath}/jfunctions
		fi
		if [ ! -z "${releaseversion}" ] && [ "${releaseversion}" != "${jversion}" ]
		then
			if [ "${csv}" == "no" ] && [ "${short}" == "no" ]
			then
				echo Skipping, found version is ${jversion} and not ${releaseversion}.
			fi
			continue;
		fi

		# output information
		if [ "${csv}" == "yes" ]
		then
			echo "\"${dir}\",\"${sitename}\",\"${jversion}\",\"${database}\",\"${dbuser}\",\"${password}\",\"${host}\",\"${prefix}\""
		else
			if [ "${short}" == "no" ]
			then
				echo "Joomla information found:"
				echo "Sitename    : ${sitename}"
				echo "Version     : ${jversion}"
				echo "DB Name     : ${database}"
				echo "DB User     : ${dbuser}"
				echo "DB Password : ${password}"
				echo "DB Host     : ${host}"
				echo "DB Prefix   : ${prefix}"
				echo ""
			else
				echo "Joomla found in ${dir}"
				echo "Version: ${jversion}"
				echo ""
			fi
		fi
	fi
done
